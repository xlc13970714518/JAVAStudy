<?xml version="1.0" encoding="UTF-8"?>
    <beans xmlns="http://www.springframework.org/schema/beans"
           xmlns:context="http://www.springframework.org/schema/context"
           xmlns:mvc="http://www.springframework.org/schema/mvc"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:tx="http://www.springframework.org/schema/tx"
           xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
        <!--数据源配置，这里用的是德鲁伊的，需要导依赖-->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
            <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
            <property name="url" value="jdbc:mysql://localhost:3306/springboot"/>
            <property name="username" value="root"/>
            <property name="password" value="123456"/>
        </bean>

    <!--扫描组件（除控制层）-->
    <context:component-scan base-package="com.xlc">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--引入jdbc.properties-->
     <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!--
    开启事务的注解驱动
    将使用注解@Transactional标识的方法或类中所有的方法进行事务管理
-->
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />
        <!--spring集成mybatis，SqlSessionFactoryBean交给spring创建-->
        <bean class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <!--<property name="configLocation" value="classpath:mybatis-config.xml">
            </property>-->
            <property name="typeAliasesPackage" value="com.xlc.pojo"/>
            <property name="configuration">
                    <bean class="org.apache.ibatis.session.Configuration">
                        <property name="mapUnderscoreToCamelCase" value="true"/>
                    </bean>
            </property>
            <!-- 批量扫描类路径下的mapper.xml
            <property name="mapperLocations" value="classpath:mapper/*.xml"></property>-->
        </bean>

        <!--填写mapper接口的基本路径-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="com.xlc.mapper"/>
        </bean>
</beans>